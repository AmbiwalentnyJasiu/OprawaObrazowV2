// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OprawaObrazowWebApi;

#nullable disable

namespace OprawaObrazowWebApi.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.3.24172.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OprawaObrazowWebApi.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email_address");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("phone_number");

                    b.HasKey("Id")
                        .HasName("clients_pk");

                    b.ToTable("clients", "oprawa");
                });

            modelBuilder.Entity("OprawaObrazowWebApi.Models.Delivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DateDue")
                        .HasColumnType("date")
                        .HasColumnName("date_due");

                    b.Property<bool>("IsDelivered")
                        .HasColumnType("bit")
                        .HasColumnName("is_delivered");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("supplier_id");

                    b.HasKey("Id")
                        .HasName("deliveries_pk");

                    b.HasIndex("SupplierId");

                    b.ToTable("deliveries", "oprawa");
                });

            modelBuilder.Entity("OprawaObrazowWebApi.Models.Frame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("code");

                    b.Property<int>("Color")
                        .HasColumnType("int")
                        .HasColumnName("color");

                    b.Property<bool>("HasDecoration")
                        .HasColumnType("bit")
                        .HasColumnName("has_decoration");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("price");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("supplier_id");

                    b.Property<int>("Width")
                        .HasColumnType("int")
                        .HasColumnName("width");

                    b.HasKey("Id")
                        .HasName("frame_pk");

                    b.HasIndex("SupplierId");

                    b.ToTable("frames", "oprawa");
                });

            modelBuilder.Entity("OprawaObrazowWebApi.Models.FramePiece", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DeliveryId")
                        .HasColumnType("int")
                        .HasColumnName("delivery_id");

                    b.Property<int>("FrameId")
                        .HasColumnType("int")
                        .HasColumnName("frame_id");

                    b.Property<bool>("IsDamaged")
                        .HasColumnType("bit")
                        .HasColumnName("is_damaged");

                    b.Property<bool>("IsInStock")
                        .HasColumnType("bit")
                        .HasColumnName("is_in_stock");

                    b.Property<int>("Length")
                        .HasColumnType("int")
                        .HasColumnName("length");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<string>("StorageLocation")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("storage_location");

                    b.HasKey("Id")
                        .HasName("frame_pieces_pk");

                    b.HasIndex("DeliveryId");

                    b.HasIndex("FrameId");

                    b.HasIndex("OrderId");

                    b.ToTable("frame_pieces", "oprawa");
                });

            modelBuilder.Entity("OprawaObrazowWebApi.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("client_id");

                    b.Property<DateOnly>("DateDue")
                        .HasColumnType("date")
                        .HasColumnName("date_due");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit")
                        .HasColumnName("is_closed");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit")
                        .HasColumnName("is_finished");

                    b.Property<int>("PictureHeight")
                        .HasColumnType("int")
                        .HasColumnName("picture_height");

                    b.Property<int>("PictureWidth")
                        .HasColumnType("int")
                        .HasColumnName("picture_width");

                    b.Property<DateOnly?>("PlannedDate")
                        .HasColumnType("date")
                        .HasColumnName("planned_date");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("price");

                    b.HasKey("Id")
                        .HasName("orders_pk");

                    b.HasIndex("ClientId");

                    b.ToTable("orders", "oprawa");
                });

            modelBuilder.Entity("OprawaObrazowWebApi.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email_address");

                    b.Property<DateOnly?>("LastSupply")
                        .HasColumnType("date")
                        .HasColumnName("last_supply");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("phone_number");

                    b.HasKey("Id")
                        .HasName("suppliers_pk");

                    b.ToTable("suppliers", "oprawa");
                });

            modelBuilder.Entity("OprawaObrazowWebApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("password");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("users_pk");

                    b.ToTable("users", "oprawa");
                });

            modelBuilder.Entity("OprawaObrazowWebApi.Models.Delivery", b =>
                {
                    b.HasOne("OprawaObrazowWebApi.Models.Supplier", "Supplier")
                        .WithMany("Deliveries")
                        .HasForeignKey("SupplierId")
                        .IsRequired()
                        .HasConstraintName("deliveries_suppliers_fk");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("OprawaObrazowWebApi.Models.Frame", b =>
                {
                    b.HasOne("OprawaObrazowWebApi.Models.Supplier", "Supplier")
                        .WithMany("Frames")
                        .HasForeignKey("SupplierId")
                        .IsRequired()
                        .HasConstraintName("frame_suppliers_id_fk");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("OprawaObrazowWebApi.Models.FramePiece", b =>
                {
                    b.HasOne("OprawaObrazowWebApi.Models.Delivery", "Delivery")
                        .WithMany("FramePieces")
                        .HasForeignKey("DeliveryId")
                        .IsRequired()
                        .HasConstraintName("frame_pieces_deliveries_fk");

                    b.HasOne("OprawaObrazowWebApi.Models.Frame", "Frame")
                        .WithMany("FramePieces")
                        .HasForeignKey("FrameId")
                        .IsRequired()
                        .HasConstraintName("frame_pieces_frame_id_fk");

                    b.HasOne("OprawaObrazowWebApi.Models.Order", "Order")
                        .WithMany("FramePieces")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("frame_pieces_orders_id_fk");

                    b.Navigation("Delivery");

                    b.Navigation("Frame");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("OprawaObrazowWebApi.Models.Order", b =>
                {
                    b.HasOne("OprawaObrazowWebApi.Models.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("orders_clients_id_fk");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("OprawaObrazowWebApi.Models.Client", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("OprawaObrazowWebApi.Models.Delivery", b =>
                {
                    b.Navigation("FramePieces");
                });

            modelBuilder.Entity("OprawaObrazowWebApi.Models.Frame", b =>
                {
                    b.Navigation("FramePieces");
                });

            modelBuilder.Entity("OprawaObrazowWebApi.Models.Order", b =>
                {
                    b.Navigation("FramePieces");
                });

            modelBuilder.Entity("OprawaObrazowWebApi.Models.Supplier", b =>
                {
                    b.Navigation("Deliveries");

                    b.Navigation("Frames");
                });
#pragma warning restore 612, 618
        }
    }
}
